<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
      xmlns:aop="http://www.springframework.org/schema/aop"      
      xmlns:tx="http://www.springframework.org/schema/tx"       
      xmlns:jdbc="http://www.springframework.org/schema/jdbc"       
      xmlns:context="http://www.springframework.org/schema/context"      
      xsi:schemaLocation="       
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd       
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd       
      http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd       
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd       
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"      
     >
     <!--enable annotation  可以去掉，有了context:component-scan-->
   <context:annotation-config />    
   <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven />
	<!-- 导入属性配置文件 -->
	<context:property-placeholder location="classpath:database.properties" />
    <!-- <context:component-scan base-package="com.happy.services" /> 增加递归扫描-->
    <context:component-scan base-package="com.zaojiao" >
        <context:include-filter type="regex" expression="com.zaojiao.sys.service.*"/>
    </context:component-scan>
    
	<!-- mysql数据源,driverManagerDataSource没有数据连接池的概念 -->
   <!--  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
	</bean> -->
	<!-- 数据池的：dbcp datasource -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
		destroy-method="close" lazy-init="false">
		<!-- Connection Info -->
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}"></property>
		<!-- <property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" /> -->
		<!-- Connection Pooling Info -->
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="defaultAutoCommit" value="false" />
		<property name="timeBetweenEvictionRunsMillis" value="3600000"/>
		<property name="minEvictableIdleTimeMillis" value="3600000"/>
	</bean>
	
	<!-- 事务交给spring做 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
	<!-- 使用mybatis进行事务管理 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- <property name="configLocation" value="classpath:mybatis-config.xml" /> -->
		<property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="com.zaojiao.sys.pojo" />
	</bean>
	 <!-- scan for mappers and let them be autowired代替上面的业务bean -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zaojiao.sys.mappers" />
    </bean>
	
	
	<!-- upload file -->  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
		<property name="maxUploadSize">  
			<value>20480000</value>  
		</property>
		<property name="defaultEncoding">  
			<value>UTF-8</value>  
		</property>  
	</bean>  
</beans>
